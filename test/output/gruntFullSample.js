// This file was generated by modules-webmake (modules for web) project.
// See: https://github.com/medikoo/modules-webmake

define("full", function () { return (function (modules) {
	var getModule, getRequire, require;
	getModule = (function (wrap) {
		return function (scope, tree, path, fullpath) {
			var name, dir, exports, module, fn, isDir;
			path = path.split('/');
			name = path.pop();
			if (!name) {
				isDir = true;
				name = path.pop();
			}
			if ((name === '.') || (name === '..')) {
				path.push(name);
				name = '';
			}
			while ((dir = path.shift())) {
				if (dir === '..') {
					scope = tree.pop();
				} else if (dir !== '.') {
					tree.push(scope);
					scope = scope[dir];
					if (!scope) {
						throw new Error("Could not find module '" + fullpath + "'");
					}
				}
			}
			if (name) {
				if (!isDir && scope[name + '.js']) {
					name += '.js';
				}
				if (typeof scope[name] === 'object') {
					tree.push(scope);
					scope = scope[name];
					name = 'index.js';
				}
			} else {
				name = 'index.js';
			}
			fn = scope[name];
			if (!fn) throw new Error("Could not find module '" + fullpath + "'");
			if (fn.hasOwnProperty('module')) return fn.module.exports;
			exports = {};
			fn.module = module = { exports: exports };
			fn.call(exports, exports, module, getRequire(scope, tree));
			return module.exports;
		};
	}(function (cmodule) {
		return function (ignore, module) {
			module.exports = cmodule.exports;
		};
	}));
	require = function (scope, tree, fullpath) {
		var name, path = fullpath, t = fullpath.charAt(0);
		if (t === '/') {
			path = path.slice(1);
			scope = modules['/'];
			tree = [];
		} else if (t !== '.') {
			name = path.split('/', 1)[0];
			scope = modules[name];
			tree = [];
			path = path.slice(name.length + 1) || scope[':mainpath:'];
		}
		return getModule(scope, tree, path, fullpath);
	};
	getRequire = function (scope, tree) {
		return function (path) {
			return require(scope, [].concat(tree), path);
		};
	};
	return getRequire(modules, []);
})({
	"webassemble": {
		"test": {
			"output": {
				"gruntFullSample-pre.js": function (exports, module, require) {
					// ----- Exports from test/src/constants.js -----
					exports.CONSTANTS = require('../src/constants.js');

					// ----- Exports from test/src/module_exports_abc.js -----
					exports.funA = require('../src/module_exports_abc.js').funA;
					exports.funB = require('../src/module_exports_abc.js').funB;
					exports.funC = require('../src/module_exports_abc.js').funC;

					// ----- Exports from test/src/module_exports_d.js -----
					exports.funD = require('../src/module_exports_d.js');

					// ----- Exports from test/src/module_exports_e.js -----
					exports.funE = require('../src/module_exports_e.js');

					// ----- Exports from test/src/module_exports_f.js -----
					exports.funF = require('../src/module_exports_f.js');

					// ----- Exports from test/src/module_exports_g.js -----
					exports.funG = require('../src/module_exports_g.js');
				}
			},
			"src": {
				"constants.js": function (exports, module, require) {
					var CONSTANTS = {
					    DATE_FORMAT: 'YYYY/MM/DD',
					    DATETIME_FORMAT: 'YYYY/MM/DDTHH:mm:ss.SSSZ'
					};

					exports = CONSTANTS;
				},
				"fn_wrap.js": function (exports, module, require) {
					'use strict';

					var f = function (result) {
					    return function () {
					        return result;
					    };
					};

					module.exports = f;
				},
				"module_exports_abc.js": function (exports, module, require) {
					var f = require('./fn_wrap');

					exports.funA = f('A');

					exports.funB = f('B');

					module.exports.funC = f('C');
				},
				"module_exports_d.js": function (exports, module, require) {
					var f = require('./fn_wrap');

					var funD = f('D');

					module.exports = funD;
				},
				"module_exports_e.js": function (exports, module, require) {
					var f = require('./fn_wrap');

					var funE = f('E');

					exports = module.exports = funE;
				},
				"module_exports_f.js": function (exports, module, require) {
					var f = require('./fn_wrap');

					var funF = f('F');

					module.exports = exports = funF;
				},
				"module_exports_g.js": function (exports, module, require) {
					var f = require('./fn_wrap');
					var funG;

					exports = module.exports = funG = f('G');
				}
			}
		}
	}
})("webassemble/test/output/gruntFullSample-pre");
});
